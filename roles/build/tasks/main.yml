---
- name: Normalize workstation config
  kilip.workstation.facts:

- name: Ensure facts are gathered
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ facts.name }}"
    tasks_from: 'facts.yml'
    public: true
    apply:
      tags: facts
  loop: "{{ build_groups }}"
  loop_control:
    loop_var: facts
    label: "{{ facts.name }}"
  tags: facts

- name: Ensure configuration validated
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ validate.name }}"
    tasks_from: 'validate.yml'
    public: true
    apply:
      tags: validate
  when: "'validate' in validate"
  loop: "{{ build_groups }}"
  loop_control:
    loop_var: validate
    label: "{{ validate.name }}"
  tags: validate

- name: Ensure preflight task executed
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ preflight.name }}"
    public: true
    tasks_from: preflight
    apply:
      tags: preflight
  when: "'preflight' in preflight"
  loop_control:
    loop_var: preflight
    label: "{{ preflight.name }}"
  loop: "{{ build_groups }}"
  tags: preflight

- name: Ensure workstation build
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ build.name }}"
    public: true
    apply:
      tags: build
  loop_control:
    loop_var: build
    label: "{{ build.name }}"
  loop: "{{ build_groups }}"
  tags: build

- name: Ensure workstation post-build
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ post.name }}"
    public: true
    tasks_from: post-build.yml
    apply:
      tags: post-build
  when: "'post_build' in post"
  loop_control:
    loop_var: post
    label: "{{ post.name }}"
  loop: "{{ build_groups }}"
  tags: post-build

- name: Ensure build verified
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ verify.name }}"
    tasks_from: 'verify.yml'
    public: true
    apply:
      tags: verify
  when: "'verify' in verify"
  loop: "{{ build_groups }}"
  loop_control:
    loop_var: verify
    label: "{{ verify.name }}"
  tags: validate
