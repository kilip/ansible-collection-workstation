---
- name: Normalize workstation config
  kilip.workstation.facts:

- name: Ensure facts are gathered
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ role_item.name }}"
    tasks_from: 'facts.yml'
    public: true
  when: role_item.enabled
  loop: "{{ build_groups }}"
  loop_control:
    loop_var: role_item
    label: "{{ role_item.name }}"

- name: Ensure preflight check
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ preflight_item.name }}"
    public: true
    tasks_from: preflight
  when: preflight_item.preflight and preflight_item.enabled
  loop_control:
    loop_var: preflight_item
    label: "{{ preflight_item.name }}"
  loop: "{{ build_groups }}"

- name: Ensure workstation build
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ build_item.name }}"
    public: true
  loop_control:
    loop_var: build_item
    label: "{{ build_item.name }}"
  loop: "{{ build_groups }}"
  when: build_item.enabled

- name: Ensure workstation post-build
  ansible.builtin.include_role:
    name: "kilip.workstation.{{ post.name }}"
    public: true
    tasks_from: post-build.yml
  when: "'post_build' in post and post.post_build and post.enabled"
  loop_control:
    loop_var: post
    label: "{{ post.name }}"
  loop: "{{ build_groups }}"
