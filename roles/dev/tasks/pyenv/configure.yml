---
- name: pyenv ~> Ensure hook state
  ansible.builtin.set_fact:
    pyenv_hook_state: "{{ (build_dev and pyenv) and 'present' or 'absent' }}"

- name: pyenv ~> Ensure shell configured
  ansible.builtin.blockinfile:
    marker:       "{{ shell_block_marker }}"
    marker_begin: "< pyenv"
    marker_end:   "> pyenv"
    dest: "{{ item }}"
    block: |
      if type pyenv &>/dev/null
      then
        export PYENV_ROOT="$HOME/.pyenv"
        command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
      fi
    create: yes
    mode: "0644"
    state: "{{ pyenv_hook_state }}"
  loop:
    - "{{ shell_bashrc }}"
    - "{{ shell_bash_profile }}"
    - "{{ shell_zshrc }}"
    - "{{ shell_zprofile }}"
  loop_control:
    label: "{{ item | basename }}"

- name: pyenv ~> Ensure fish configured
  ansible.builtin.blockinfile:
    marker:       "{{ shell_block_marker }}"
    marker_begin: "< pyenv"
    marker_end:   "> pyenv"
    dest: "{{ shell_fish }}"
    create: yes
    mode: "0644"
    block: |
      if test -d $HOME/".pyenv"
        set -gx PYENV_ROOT $HOME/.pyenv
        set -gx fish_user_paths $PYENV_ROOT/bin $fish_user_paths
        pyenv init - | source
      end
    state: "{{ pyenv_hook_state }}"
